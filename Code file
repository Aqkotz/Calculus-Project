#Andy Kotz and Andrew Parker derivatives project

#Inputs
Function = input("Input Function (write coefficients): ")
#IntvlStart = float(input("Input Interval Start: "))
#IntvlEnd = float(input("Input Interval End: "))

def derivative (Func):
    if "^" in Func:
        return powerrule (Func)
    elif "*" in Func:
        return productrule (Func)

def powerrule (Func):
    parts = Func.split("^")
    ax = parts[0].split("*")
    coef = ax[0]
    x = ax[1]
    exp = parts[1]
    deriv = (str(float(coef)*float(exp))+"*"+x+"^"+str(float(exp)-1))
    return deriv
    
def productrule (Func):
    parts = Func.split("*")
    u = parts[0]
    del parts[0]
    v = ""
    for i in parts:
        if v == "":
            v = (v+i)
        if v != "":
            v = (v+"*"+i)
    deriv = (u+"*"+derivative(v)+"+"+v+derivative(u))
    return deriv
    
print (derivative (Function))